package cs.Lab2.WordCount;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
import org.apache.hadoop.util.GenericOptionsParser;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;


public abstract class HeightArbresDriver extends Configured implements Tool {


    public static void main (String[] args) throws Exception {


    	Configuration conf = new Configuration();

        // Création d'un job en lui fournissant la configuration et une description textuelle de la tâche

        Job job = Job.getInstance(conf, " donner des infos sur les arbres");
        // On précise les classes MyProgram, Map et Reduce

        job.setJarByClass(HeightArbresDriver.class);

        job.setMapperClass(HeightArbresMapper.class);

        job.setReducerClass(HeightArbresReducer.class);


        // Définition des types clé/valeur de notre problème

        job.setMapOutputKeyClass(Text.class);

        job.setMapOutputValueClass(IntWritable.class);

        // Définition des fichiers d'entrée et de sorties (ici considérés comme des arguments à préciser lors de l'exécution)

        FileInputFormat.addInputPath(job, new Path("/home/cloudera/arbres.csv"));
		
        FileOutputFormat.setOutputPath(job, new Path("/home/cloudera/Data_Lab2/ArbresInfos/HighestHeightByType.txt"));

        FileSystem fs2 = FileSystem.newInstance(conf);

        if (fs2.exists(new Path("/home/cloudera/Data_Lab2/ArbresInfos/HighestHeightByType.txt"))) {

        	fs2.delete(new Path("/home/cloudera/Data_Lab2/ArbresInfos/HighestHeightByType.txt"), true);

        }

        if(job.waitForCompletion(true))
        	System.exit(0);
        System.exit(-1);
    }



}

